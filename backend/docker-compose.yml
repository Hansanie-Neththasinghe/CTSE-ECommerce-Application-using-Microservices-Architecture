version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8085:8080"
    environment:
      - USER_SERVICE_URL=http://user-service:5001
      - AUTH_SERVICE_URL=http://auth-service:5002
      - PRODUCT_SERVICE_URL=http://product-service:5003
      - ORDER_SERVICE_URL=http://order-service:5004
    depends_on:
      - user-service
      - auth-service
      # - product-service
      # - order-service
    networks:
      - ecommerce-network

  user-service:
    build: ./user-service
    ports:
      - "5009:5001"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb+srv://gavithrachatgpt:2TRO9WVJg5EMQY2e@cluster0.pwe9uja.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    restart: always
    networks:
      - ecommerce-network

  auth-service:
    build: ./auth-service
    ports:
      - "5010:5002"
    depends_on:
      - user-service
    environment:
      - MONGO_URI=mongodb+srv://gavithrachatgpt:2TRO9WVJg5EMQY2e@cluster0.pwe9uja.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    restart: always
    networks:
      - ecommerce-network

  # product-service:
  #   build: ./product-service
  #   ports:
  #     - "5003:5003"
  #   depends_on:
  #     - mongo
  #   environment:
  #     - MONGO_URI=mongodb://mongo:27017/products
  #   restart: always
  #   networks:
  #     - ecommerce-network

  # order-service:
  #   build: ./order-service
  #   ports:
  #     - "5004:5004"
  #   depends_on:
  #     - mongo
  #   environment:
  #     - MONGO_URI=mongodb://mongo:27017/orders
  #   restart: always
  #   networks:
  #     - ecommerce-network

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ecommerce-network
    restart: always

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mongo-data:
